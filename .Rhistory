people<-c('mako','mika','atom')
people[3]
people[3]<-'lucy'
people[3]<-'atom'
ages<-c(36,35,4)
names(ages)<-c('mako','mika','atom')
length(ages)
mean(ages)
hist(ages)
ages<-c(36,35,4)
names(ages)<-c('mako','mika','atom')
length(ages)
mean(ages)
hist(ages)
load("~/Desktop/OneDrive/Winter 2017/Statistics/com521-lauren/week2_dataset-lauren copy.RData")
rm(ages)
ls()
week2.dataset
head(week2.dataset)
length(week2.dataset)
hist(week2.dataset)
library()
library(readr)
COS_Statistics_Mobile_Sessions <- read_csv("~/Desktop/OneDrive/Winter 2017/Statistics/com521-lauren/COS-Statistics-Mobile_Sessions.csv")
View(COS_Statistics_Mobile_Sessions)
library(readr)
COS_Statistics_Top5000_Pages <- read_csv("~/Desktop/OneDrive/Winter 2017/Statistics/com521-lauren/COS-Statistics-Top5000-Pages.csv")
View(COS_Statistics_Top5000_Pages)
View(COS_Statistics_Top5000_Pages)
head(COS_Statistics_Top5000_Pages)
head(COS_Statistics_Mobile_Sessions)
View(COS_Statistics_Top5000_Pages)
head(COS_Statistics_Top5000_Pages)
Top5000<-c(COS_Statistics_Top5000_Pages)
rm(Top5000)
Top5000<-data.frame(COS_Statistics_Top5000_Pages)
Mobile<-data.frame(COS_Statistics_Mobile_Sessions)
summary(Mobile)
class(Mobile$Month)
class(mobile)
head(Mobile)
class(Mobile)
class(Mobile$New_Sessions)
class(Mobile$New_Users)
class(Mobile$AvgSessionDuration)
help("hms")
help("class")
class(Mobile$PagesPerSession)
class(Mobile$Month)
hist(Mobile$Sessions)
hist(Mobile$New_Users)
hist(Mobile$PagesPerSession)
52+2.58*2.4
.52+2.58*.024
52-2.58*2.4
mobile(is.na)
Mobile[is.na]
dim(Mobile)
head(Top5000)
summary(Top5000)
dim(Top5000)
sample(Mobile)
sample(Mobile, 5)
sample(Mobile, 5,)
df[sample(nrow(Mobile), 5), ]
sample(nrow(Mobile), 5, )
Mobile[sample(seq(1, nrow(Mobile)), 5),]
Top5000[sample(seq(1, nrow(Top5000)), 5),]
MonthViews5000<-data.frame(Top5000$month, Top5000$Pageviews)
MonthViews5000<-data.frame(Top5000$Month, Top5000$Pageviews)
head(MonthViews5000)
head(Top5000)
head(mobile)
head(Mobile)
Top5000$Month
strptime(Top5000$Month)
Mobile$Operating_System
Table(Mobile$Operating_System)
Table
Character(Mobile$Operating_System)
library(plyr)
count(Mobile$Operating_System)
us.datetime
as.Date("01/01/2015", format="%m/%d/%y")
us.datetime
as.POSIXct(us.datetime, format="%m/%d/%y %H:%M:%S", tz="UTC")
us.datetime<-"03/01/2015 01:01:01 AM"
as.POSIXct(us.datetime, format="%m/%d/%y %H:%M:%S", tz="UTC")
as.POSIXct(us.datetime, format="%m/%d/%y %H:%M:%S %p", tz="UTC")
class(us.datetime)
as.POSIXct(us.datetime, format="%m/%d/%y %H:%M:%S %p", tz="UTC")
as.POSIXct(us.datetime, format="%m/%d/%y %1:%M:%S %p", tz="UTC")
us.datetime<-as.POSIXct(us.datetime, format="%m/%d/%y %1:%M:%S %p", tz="UTC")
class(us.datetime)
tapply(Mobile$Operating_System)
View(COS_Statistics_Mobile_Sessions)
tapply(Mobile$Operating_System, Mobile$Sessions, sum)
tapply(Mobile$Operating_System, Mobile$Sessions, sum)
tapply(Mobile$Sessions, Mobile$Operating_System, sum)
sum.Sessions<-tapply(Mobile$Sessions, Mobile$Operating_System, sum)
as.us.datetime<-Mobile$Month
Mobile$month<-as.POSIXct(Mobile$month, format="%m/%d/%y %1:%M:%S %p", tz="UTC")
as.Date(Mobile$Month)
library(readr)
COS_Statistics_Mobile_Sessions <- read_csv("~/Desktop/OneDrive/Winter 2017/Statistics/com521-lauren/COS-Statistics-Mobile_Sessions.csv")
Mobile<-data.frame(COS_Statistics_Mobile_Sessions)
as.POSIXct(Mobile$month)
as.POSIXct(Mobile$month, format="%m/%d/%y %1:%M:%S %p", tz="UTC")
as.POSIXct(Mobile$month, format="%m/%d/%y %H:%M:%S %p", tz="UTC")
View(MonthViews5000)
as.POSIXct(Top5000$Month, format="%m/%d/%y %H:%M:%S %p", tz="UTC")
as.POSIXct(Top5000$Month, format="%m/%d/%y %1:%M:%S %p", tz="UTC")
as.POSIXct(Top5000$Month, format="%m/%d/%y %1:%M:%S %p")
as.POSIXct(as.character(Top5000$Month), format="%m/%d/%y %1:%M:%S %p")
as.POSIXct(as.character(Top5000$Month), format="%m/%d/%y %H:%M:%S %p")
as.POSIXct(as.character(Top5000$Month), format="%m/%d/%y %H:%M:%S %p", tz="UTC")
merge(Mobile, Top5000)
a
merge(Mobile, Top5000, by.x=Month, by.y=Month)
merge(Mobile, Top5000, all.x=TRUE, all.y=True)
merge(Mobile, Top5000, all.x=TRUE, all.y=TRUE)
merge(x = Mobile, y = Top5000, by = "Month", all.x=TRUE)
View(Mobile)
monthlyviews<-tapply(Top5000$Pageviews, Top5000$Month, sum)
table(monthlyviews)
lenght(table(monthlyviews))
length(table(monthlyviews))
MonthViews5000<-data.frame(Top5000$Month, monthlyviews)
MonthViews5000<-data.frame(newmonths=names(monthlyviews), monthlyviews)
View(MonthViews5000)
View(COS_Statistics_Mobile_Sessions)
View(COS_Statistics_Top5000_Pages)
View(COS_Statistics_Mobile_Sessions)
View(MonthViews5000)
byOS<-tapply(Mobile$Sessions, Mobile$Operating_System, sum)
OSMonth<-data.frame(OSMonth=names(byOS), byOS)
View(OSMonth)
OSTotals<-data.frame(Platform=names(byOS), byOS)
View(OSTotals)
rm(OSMonth)
monthlyviews<-tapply(Mobile$Sessions, Top5000$Month, sum)
monthlyviews<-tapply(Mobile$Sessions, Mobile$Month, sum)
monthlyviews<-tapply(Top5000$Pageviews, Top5000$Month, sum)
mobilemonthly<-tapply(Mobile$Sessions, Mobile$Month, sum)
MonthSessionsMobile<-data.frame(mobilemonths=names(mobilemonthly), mobilemonthly)
View(MonthSessionsMobile)
mobile.os.monthly.views<-Mobile$Sessions*Mobile$PagesPerSession
MonthSessionsMobile<-data.frame(mobile.os.monthly.views, mobilemonthly)
mobilemonthly<-tapply(Mobile$Sessions*Mobile$, Mobile$Month, sum)
mobilemonthly<-tapply(mobile.os.monthly.views, Mobile$Month, sum)
MonthSessionsMobile<-data.frame(views=names(mobilemonthly), mobilemonthly)
View(MonthSessionsMobile)
totalsbymonth.mobile<-tapply(mobile.os.monthly.views, Mobile$Month, sum)
MonthSessionsMobile<-data.frame(month=names(totalsbymonth.mobile), totalsbymonth.mobile)
View(MonthSessionsMobile)
tapply(mobile.os.monthly.views, list(mobile$Operating_System, Mobile$Month), sum)
tapply(mobile.os.monthly.views, list(Mobile$Operating_System, Mobile$Month), sum)
merge(x = Mobile, y = Top5000, by = "Month", all.x=TRUE)
merge(x = MonthSessionsMobile, y = MonthViews5000, by = "Month", all.x=TRUE)
View(MonthSessionsMobile)
View(MonthViews5000)
MonthViews5000<-data.frame(months=names(monthlyviews), monthlyviews)
View(MonthSessionsMobile)
View(MonthViews5000)
View(MonthSessionsMobile)
MonthViews5000<-data.frame(month=names(monthlyviews), monthlyviews)
View(MonthSessionsMobile)
View(MonthViews5000)
View(MonthSessionsMobile)
merge(x = MonthSessionsMobile, y = MonthViews5000, by = "Month", all.x=TRUE, all.y=TRUE)
merge(x = MonthSessionsMobile, y = MonthViews5000, by = "month", all.x=TRUE, all.y=TRUE)
Merge(x = MonthSessionsMobile, y = MonthViews5000, by = "month", all.x=TRUE, all.y=TRUE)
merge(x = MonthSessionsMobile, y = MonthViews5000, by = "month", all.x=TRUE, all.y=TRUE)
views<-merge(x = MonthSessionsMobile, y = MonthViews5000, by = "month", all.x=TRUE, all.y=TRUE)
views
views$totalsbymonth.mobile/views$monthlyviews*100
views$pct<-views$totalsbymonth.mobile/views$monthlyviews*100
views
views$pct<-views$totalsbymonth.mobile/views$monthlyviews*100
as.POSIXct(as.character(views$month), format="%m/%d/%Y %H:%M:%S %p", tz="UTC")
class(views$month)
as.POSIXct(views$month, format="%m/%d/%y %H:%M:%S %p")
as.POSIXct(as.character(Top5000$Month), format="%m/%d/%y %H:%M:%S %p", tz="UTC")
as.date(views$month, format="%m/%d/%Y %H:%M:%S %p", tz="UTC")
as.Date(views$month, format="%m/%d/%Y %H:%M:%S %p", tz="UTC")
class(views$month)
views[order(views$month),]
views$month<-as.Date(views$month, format="%m/%d/%Y %H:%M:%S %p", tz="UTC")
class(views$month)
class(views$month)
library(ggplot2)
ggplot(data=views)+aes(x=month, y=pct)+geom_point()+\scale_y_continuous(limits=c(0,1))
ggplot(data=views)+aes(x=month, y=pct)+geom_point()+scale_y_continuous(limits=c(0,1))
ggplot(data=views)+aes(x=month, y=pct)+geom_point()+scale_y_continuous(limits=c(0,100))
views$pct<-views$totalsbymonth.mobile/views$monthlyviews
as.POSIXct(as.character(views$month), format="%m/%d/%Y %H:%M:%S %p", tz="UTC")
views$month<-as.Date(views$month, format="%m/%d/%Y %H:%M:%S %p", tz="UTC")
class(views$month)
ggplot(data=views)+aes(x=month, y=pct)+geom_point()+scale_y_continuous(limits=c(0,1))
rm(us.datetime)
rm(as.us.datetime)
read.delim()
help("read.delim")
order(mtcars$mpg)
mtcars[order(mtcars)]
mtcars[order(mtcars$mpg)]
mtcars[order(mtcars$mpg),]
tmp<-mtcars
tmp$mpg<15
tmp$mpg[tmp$mpg<15]<-NA
tmp
hist(mtcars)
hist(mtcars$mpg)
sd(mtcars$mpg)
sd(mtcars$mpg)/sqrt(length(mtcars$mpg))
mean(mtcars$mpg)
1.96*sd(mtcars$mpg)/sqrt(length(mtcars$mpg))
(1.96*sd(mtcars$mpg)/sqrt(length(mtcars$mpg)))*c(-1,1)
mean(mtcars$mpg) + (1.96*sd(mtcars$mpg)/sqrt(length(mtcars$mpg)))*c(-1,1)
t.test(mtcars$mpg)
gnorm(mean=0, sd=1, p=0.975)
qnorm(mean=0, sd=1, p=0.975)
rnorm(mean=0, sd=1, n=10)
x.population<-rnomr(n=100, mean=42, sd=42)
x.population<-rnorm(n=100, mean=42, sd=42)
rm(by.OS, mobile.os.monthly.views, mobilemonthly)
rm(byOS)
rm(views)
rm(Top5000, MonthViews5000, OSTotals)
rm(Mobile, monthlyviews, sum.Sessions)
mean(x.population)
sample(x.population, 10)
find.min.of.sample<-function(){
my.sample<-sample(x.population, 10)
min(my.sample)
}
find.min.of.sample()
find.min.of.sample()
find.min.of.sample()
find.min.of.sample<-function(i){
my.sample<-sample(x.population, 10)
min(my.sample)
}
sapply(rep(1,100), find.min.of.sample)
help(sapply)
hist(sapply(rep(1,100), find.min.of.sample))
x.population<-rnorm(n=1000, mean=42, sd=42)
sample(x.population, 10)
find.min.of.sample<-function(i){
my.sample<-sample(x.population, 10)
min(my.sample)
}
sapply(rep(1,100), find.min.of.sample)
hist(sapply(rep(1,100), find.min.of.sample))
hist(sapply(rep(1,100), find.min.of.sample))
hist(sapply(rep(1,100), find.min.of.sample))
help("read.delim")
rm(COS_Statistics_Mobile_Sessions, COS_Statistics_Top5000_Pages, MonthSessionsMobile, totalsbymonth.mobile)
library(readr)
com521_population <- read_csv("~/Desktop/OneDrive/Winter 2017/Statistics/uwcom521-assignments/week_05/com521_population.tsv")
View(com521_population)
read.delim(com521_population)
read.delim(com521_population, header=TRUE, sep=" ", dec=".")
read.delim("~/Desktop/OneDrive/Winter 2017/Statistics/uwcom521-assignments/week_05/com521_population.tsv", header=TRUE, sep=" ", dec=".")
read.delim("~/Desktop/OneDrive/Winter 2017/Statistics/uwcom521-assignments/week_05/com521_population.tsv")
com521_population <- read.delim("~/Desktop/OneDrive/Winter 2017/Statistics/uwcom521-assignments/week_05/com521_population.tsv")
head(com521_population)
setwd("~/Desktop/OneDrive/Winter 2017/Statistics/com521-lauren")
load("~/Desktop/OneDrive/Winter 2017/Statistics/com521-lauren/week2_dataset-lauren copy.RData")
length(week2.dataset)
summary(week2.dataset)
IQR(week2.dataset)
var(week2.dataset)
sd(week2.dataset)
my.mean<- function(week2.dataset) {sum(week2.dataset)/length(week2.dataset)}
my.mean(week2.dataset)
mean(com521_population$x)
setwd("/users/laurenfine/desktop/onedrive/winter 2017/statistics/com521-lauren")
library(readr)
week3_dataset_lauren <- read_csv("/users/laurenfine/desktop/onedrive/winter 2017/statistics/com521-lauren/week3_dataset-lauren.csv")
View(week3_dataset_lauren)
mean(week3_dataset_lauren$x)
mean(week3_dataset_lauren$x) + (1.96*sd(week3_dataset_lauren$x)/sqrt(length(week3_dataset_lauren$x)))*c(-1,1)
t.test(week3_dataset_lauren$x)
t.test(com521_population$x)
hist(week3_dataset_lauren$x)
hist(com521_population$x)
summary(week3_dataset_lauren$x)
summary(com521_population$x)
mean(com521_population$y)
241.5074
t.test(week3_dataset_lauren$y)
0.9.population<-rnorm(n=10000, min=0, max=9)
random.vector<-rnorm(n=10000, min=0, max=9)
help(rnorm)
random.vector<-rnorm(n=10000, min=0, max=9)
random.vector<-runif(n=10000, min=0, max=9)
mean(random.vector)
hist(random.vector)
sample(random.vector, 100)
sample(random.vector, 100)
sapply(rep(1,100), sample(random.vector, 2))
sample(random.vector,2)
mean(sample(random.vector,2))
mean(sample(random.vector,2))
mean.of.two<-function(i)
mean.of.two<-function(i){
my.sample<-sample(random.vector, 2)
mean(my.sample)
}
mean.of.two<-function(i)
mean.of.two()
hist(sapply(rep(1,100), mean.of.two))
mean.of.two<-function(i){
my.sample<-sample(random.vector, 2)
mean(my.sample)
}
hist(sapply(rep(1,100), mean.of.two))
hist(sapply(rep(1,100), mean.of.two))
mean.of.two(1)
mean.of.two()
mean.of.two()
mean.of.two()
sapply(rep(1,100), mean.of.two)
sapply(rep(1,100), mean.of.two)
100.mean.of.two<-sapply(rep(1,100), mean.of.two)
means.from.random.vector<-sapply(rep(1,100), mean.of.two)
summary(means.from.random.vector)
hist(means.from.random.vector)
mean.of.ten<-function(i){
my.sample<-sample(random.vector, 10)
mean(my.sample)
}
sapply(rep(1,100), mean.of.ten)
hist(sapply(rep(1,100), mean.of.ten))
mean.of.hundred<-function(i){
my.sample<-sample(random.vector, 100)
mean(my.sample)
}
sapply(rep(1,100), mean.of.hundred)
hist(sapply(rep(1,100), mean.of.hundred))
hist(means.from.random.vector)
normal.distribution.vector<-rnorm(n=1000, mean=42, sd=42)
mean(normal.distribution.vector)
hist(normal.distribution.vector)
mean(random.vector)
hist(random.vector)
mean.of.two<-function(i){
my.sample<-sample(random.vector, 2)
mean(my.sample)
}
hist(sapply(rep(1,100), mean.of.two))
mean.of.ten<-function(i){
my.sample<-sample(random.vector, 10)
mean(my.sample)
}
mean.of.two(normal.distribution.vector)
mean.of.two(normal.distribution.vector, 100)
hist(sapply(rep(1,100), mean.of.two(normal.distribution.vector)))
hist(sapply(rep(1,100), mean.of.two(normal.distribution.vector),))
mean.of.two(normal.distribution.vector)
mean.of.two
mean(my.sample)
mean.of.two<-function(random.vector){
my.sample<-sample(random.vector, 2)
mean(my.sample)
}
mean.of.two()
mean.of.two(random.vector,2)
mean.of.two()
mean.of.two<-function(random.vector){
my.sample<-sample(random.vector, 2)
mean(my.sample)
}
mean.of.two
mean.of.two(ra)
mean.of.two(normal.distribution.vector)
mean.of.two(normal.distribution.vector)
mean.of.two<-function(random.vector, 2){
my.sample<-sample(random.vector, 2)
mean(my.sample)
}
mean.of.two<-function(random.vector, 2){
my.sample<-sample(random.vector, 2)
mean(my.sample)
}
mean.of.two<-function(random.vector, 2) {
my.sample<-sample(random.vector, 2)
mean(my.sample)
}
mean.of.two<-function(random.vector) {
my.sample<-sample(random.vector, 2)
mean(my.sample)
}
mean.of.x<-function(random.vector, n=2) {
my.sample<-sample(random.vector, 2)
mean(my.sample)
}
help("function")
mean.of.x
mean.of.x<-function(random.vector, n=2) {
my.sample<-sample(random.vector, n)
mean(my.sample)
}
mean.of.x(normal.distribution.vector, 10)
mean.of.x<-function(random.vector, n=2) {
my.sample<-sample(random.vector, n)
mean(my.sample)
}
mean.of.x(random.vector,2)
mean.of.x(random.vector,10)
mean.of.x(random.vector,100)
hist(sapply(rep(1,100), mean.of.x(random.vector,2)))
hist(sapply(rep(1,100), mean.of.x(random.vector,n=2)))
hist(sapply(rep(1,100), mean.of.x))
hist(sapply(rep(1,100), mean.of.x(random.vector, n=2)))
hist(sapply(rep(1,100), mean.of.hundred))
random.vector,
mean.of.x
mean.of.x(normal.distribution.vector, n=2)
mean.of.x(normal.distribution.vector, n=10)
mean.of.x(normal.distribution.vector, n=100)
hist(sapply(rep(1,100), mean.of.two(normal.distribution.vector),))
hist(sapply(rep(1,100), mean.of.x(normal.distribution.vector),))
hist(sapply(rep(1,100), mean.of.x(normal.distribution.vector, n=2)))
mean.of.x(normal.distribution.vector, n=2)
mean.of.x(normal.distribution.vector, n=2)
mean.of.x(normal.distribution.vector, n=2)
mean.of.x(normal.distribution.vector, n=2)
mean.of.x(normal.distribution.vector, n=2)
mean.of.x(normal.distribution.vector, n=2)
hist(sapply(rep(1,100), mean.of.x(normal.distribution.vector, n=2)))
hist(lapply(rep(1,100), mean.of.x(normal.distribution.vector, n=2)))
hist(sapply(rep(1,100), mean.of.x)
)
44.51-56.81
sqrt(13.32/23+16.12/23)
-12.3+2.096*1.13137
-12.3-2.096*1.13137
161*161
29810.13/161
3.48/645.06
1171-4
sqrt(267,382)
sqrt(267382)
267382/1167
501.54*4
501.54*4+267382
hist(week3_dataset_lauren$x, breaks=10)
hist(week3_dataset_lauren$x, breaks=15)
hist(week3_dataset_lauren$x, breaks=12)
hist(week3_dataset_lauren$x, breaks=12)
hist(week3_dataset_lauren$x, breaks=11)
hist(week3_dataset_lauren$x, breaks=10)
mean(random.vector)
hist(random.vector)
sd(random.vector)
hist(lapply(rep(1,100), mean.of.x(normal.distribution.vector, n=2, replace=TRUE)))
hist(lapply(rep(1,100), mean.of.x(normal.distribution.vector, n=2)))
mean(my.sample)
mean.of.x<-function(sample.size) {
my.sample<-sample(random.vector, sample.size)
mean(my.sample)
}
mean.of.x(2)
mean.of.x(10)
hist(sapply(rep(1,100), mean.of.x(10)))
hist(sapply(rep(1,100), mean.of.x(sample.size=10)))
hist(sapply(rep(1,100), function(x) {mean.of.x(random.vector, sample.size=10))})
hist(replicate(100, {mean.of.x(sample.size=10))})
hist(replicate(100, {mean.of.x(sample.size=10)}))
hist(replicate(100, {mean.of.x(sample.size=2)}))
hist(replicate(100, {mean.of.x(sample.size=10)}))
hist(replicate(100, {mean.of.x(sample.size=100)}))
mean.of.x(random.vector,2)
hist(replicate(100, {mean.of.ndv(sample.size=2)}))
hist(replicate(100, {mean.of.ndv(sample.size=10)}))
hist(replicate(100, {mean.of.ndv(sample.size=100)}))
mean.of.ndv<-function(sample.size) {
my.sample<-sample(normal.distribution.vector, sample.size)
mean(my.sample)
}
mean.of.ndv(normal.distribution.vector, n=2)
hist(sapply(rep(1,100), mean.of.x(normal.distribution.vector, n=2)))
hist(replicate(100, {mean.of.ndv(sample.size=2)}))
hist(replicate(100, {mean.of.ndv(sample.size=10)}))
hist(replicate(100, {mean.of.ndv(sample.size=100)}))
rm(my.mean, find.min.of.sample)
rm(tmp)
rm(week2.dataset)
rm(x.population)
mean.of.x(normal.distribution.vector, n=10)
mean.of.x(normal.distribution.vector, sample.size=10)
hist(replicate(100, {mean.of.ndv(sample.size=10)}))
hist(replicate(100, {mean.of.ndv(sample.size=100)}))
hist(replicate(100, {mean.of.ndv(sample.size=100)}))
hist(replicate(100, {mean.of.ndv(sample.size=100)}))
hist(replicate(100, {mean.of.ndv(sample.size=100)}))
hist(replicate(100, {mean.of.ndv(sample.size=100)}))
hist(replicate(100, {mean.of.ndv(sample.size=100)}))
hist(replicate(100, {mean.of.ndv(sample.size=2)}))
hist(replicate(100, {mean.of.ndv(sample.size=2)}))
hist(replicate(100, {mean.of.ndv(sample.size=2)}))
hist(sapply(rep(1,100), function(x) {mean(sample(normal.distribution.vector,2))}))
hist(sapply(rep(1,100), function(x) {mean(sample(normal.distribution.vector,10))}))
hist(sapply(rep(1,100), function(x) {mean(sample(normal.distribution.vector,100))}))
hist(sapply(rep(1,100), function(x) {mean(sample(normal.distribution.vector,100))}))
hist(sapply(rep(1,100), function(x) {mean(sample(normal.distribution.vector,100))}))
sqrt(13.32^2/23+16.12^2/23)
-12.3+2.069*4.36
-12.3-2.069*4.36
267382/2006.16
